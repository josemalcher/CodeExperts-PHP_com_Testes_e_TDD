<?php

namespace Code;

use PHPUnit\Framework\TestCase;

class ProdutoTest extends TestCase
{
    private $produto;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->produto = new Produto();
    }

    public static function setUpBeforeClass(): void
    {
        // função boa para abrir BD
        print __METHOD__;

    }

    public static function tearDownAfterClass(): void
    {
        // função boa para fechar BD
        print __METHOD__;
    }

    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        unset($this->produto);
    }

    public function testSeONomeDoProdutoESetadoCorretamente()
    {
        $produto = $this->produto;
        $produto->setName('Produto 1');
        $this->assertEquals('Produto 1', $produto->getName(), 'Valores não são iguais');
    }
    public function testSeOPrecoESetadoCorretamente()
    {
        $produto = $this->produto;
        $produto->setPrice(19.99);
        $this->assertEquals(19.99, $produto->getPrice(), 'Valores Do Preço não batem');
    }
    public function testSeOSlugESetadoCorretamente()
    {
        $produto = $this->produto;
        $produto->setSlug('Produto_1');
        $this->assertEquals('Produto_1', $produto->getSlug(), 'Valores do Slug Não Bate');
    }

    /*
     * @expectedException \InvalidArgumentException
     * @expectedExceptionMessage Parâmetro Invalido, informe um SLUG
     */
    public function testSeSetSlugLancaExceptionQuandoNaoInformada()
    {
        $this->expectException('\InvalidArgumentException');
        $this->expectExceptionMessage('Parâmetro Invalido, informe um SLUG');

        $product = $this->produto;
        $product->setSlug('');

    }

}